#!/usr/bin/env python
import os
import sys
import argparse

import pyScrabbleUtils.scrabbleBoard as sb


def main(args):

	board = sb.Board(show=False)
	for w in board.players.wordTree.test(5):
		print(w)
	sys.exit(0)


	if args.scrabbleStats:
		sb.computeScrabbleStats()
		sys.exit(0)
	
	if args.show:
		show=True
	else:
		show=False

	if args.dict:
		board = sb.Board(show=show)
		board.startDict()
		sys.exit(0)

	if args.wordCheck:
		board = sb.Board(show=show)
		all_words = {w.asString() for w in board.players.wordTree.getAllAnagrams(args.wordCheck)}
		all_words = list(all_words)
		all_words.sort(key=lambda s: -len(s))
		print()
		if (len(all_words) == 0):
			print("No words found")
		else:
			cursor = 0
			last_cursor = 0
			max_nb_letters = len(all_words[0])
			for n in range(max_nb_letters):
				nb_letters = max_nb_letters - n
				print(nb_letters, "letters:")
				while cursor < len(all_words) and len(all_words[cursor]) == nb_letters:
					cursor += 1
				print(all_words[last_cursor:cursor],"\n")
				last_cursor = cursor
				
		sys.exit(0)

	if args.players:
		nPlayers = args.players
	else:
		nPlayers = 1

	if args.auto:
		board = sb.Board(nPlayers=nPlayers, show=show)
		board.startAutomaton()
		sys.exit(0)

	else:
		board = sb.Board(show=True)
		board.startAdviser()


if __name__=="__main__":
	parser = argparse.ArgumentParser(description="Automatons to play scrabble")
	parser.add_argument('-w','--wordCheck', type=str, help="returns all words formed with these letters")
	parser.add_argument('-p','--players', type=int, help="number of players")
	parser.add_argument('--scrabbleStats', action='store_true', help="makes stats about probability of having a scrabble")
	parser.add_argument('-a','--auto', action='store_true', help="launches a game with automatic players")
	parser.add_argument('-s','--show', action='store_true', help="shows current best word")
	parser.add_argument('-d','--dict', action='store_true', help="tests words in dict")
	args = parser.parse_args()
	main(args)
